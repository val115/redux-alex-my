import React, {Component} from 'react'
import { connect } from 'react-redux'
import * as R from 'ramda'
import { Link } from 'react-router-dom'

import {
  fetchPhones,
  loadMorePhones,
  addPhoneToBasket,
  fetchCategories
} from 'actions'
import { getPhones } from 'selectors'
import App from 'components/app'


class Phones extends Component {
    componentDidMount () {
        this.props.fetchPhones()
        this.props.fetchCategories()
    }

  rederPhone(phone, idx) {
    const shortDescription = `${R.take(60, phone.description)}.....`
    const {addPhoneToBasket} = this.props
    return (
      <div className='col-sm-4 col-lg-4 book-list' key={idx}>
        <div className='thumbnail'>
          <img
            className='img-thumbnail'
            src={phone.image}
            alt={phone.name}
          />
          <div className='caption'>
            <h4 className='pull-right'>${phone.price}</h4>
            <h4>
              <Link to={`/phone/${phone.id}`}> {phone.name} </Link>
            </h4>
            <p>{shortDescription}</p>
            <p>
              <button className='btn btn-primary'
                onClick={() => addPhoneToBasket(phone.id)}
              > Buy now </button>
              <Link to={`/phone/${phone.id}`}> More info </Link>
            </p>
          </div>
        </div>
      </div>
    )
  }

  render() {
    const { phones, loadMorePhones  } = this.props
    // console.log('PHONES=', phones)
    return (
      <App>
        <div className='books row'>
          { phones.map( (phone, idx) => this.rederPhone(phone, idx))}
        </div>
        <div className='row'>
          <div className='col-md-12'>
            <button
              className='pull-right btn btn-primary'
              onClick={ loadMorePhones}
            >
              Load More
            </button>
          </div>
        </div>
      </App>  
    )
  }


}

const mapStateToProps = (state, ownProps) => ({
  //все данные state, которые фильтруем   
  phones: getPhones(state, ownProps)  //ownProps доступен, т.к. является Route компонентом
})

const mapDispatchToProps = {
  fetchPhones,  //async
  fetchCategories,  //async
  loadMorePhones, //синхронный экшен
  addPhoneToBasket  //синхронный экшен, используется в компоненте <Phone />
}

export default connect(mapStateToProps, mapDispatchToProps)(Phones)
