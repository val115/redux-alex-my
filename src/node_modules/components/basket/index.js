import React  from 'react'
import {connect} from 'react-redux'
import * as R from 'ramda'
import {Link} from 'react-router-dom'

import {
  removePhoneFromBasket,
  basketCheckout,
  cleanBasket
} from 'actions'

import {
  getBasketPhonesWithCount,
  getTotalBasketPrice
} from 'selectors'

// =================================
const Basket = ({
  phones,
  totalPrice,
  removePhoneFromBasket,
  basketCheckout,
  cleanBasket
}) => {
  // console.log('Phones, totalPrice', phones, totalPrice )

  const isBasketEmpty = R.isEmpty(phones) //если пустой массив товаров

  // --------------------------------
  const renderContent = () => {
    return (
      <div>
        {/* isBasketEmpty = true, то выводиться */}
        {isBasketEmpty && <div>Your shopping cart is empty</div>} 

        <div className='table-responsive'>
          <table className='table-bordered table-striped table-condensed cf'>
            <tbody>
            {phones.map((phone, index) => (
              <tr
                key={index}
                className='item-checout'
              >
                <td className='first-column-checkout'>
                  <img
                    className='img-thumbnail'
                    src={phone.image}
                    alt={phone.name}
                  />
                </td>
                <td>{phone.name}</td>
                <td>${phone.price}</td>
                <td>{phone.count}</td>
                < td  >
                  < img className = 'delete-cart' src = 'images/trash_16x16.gif'  alt='' /> <br />
                  <span
                    onClick={() => removePhoneFromBasket(phone.id)}
                    className='delete-cart'
                  > dlete cart(иконка)</span>
                </td>
              </tr>
            ))}
            </tbody>
          </table>
        </div>
        {
          //если корзина не пустая (R.not) = !
          R.not(isBasketEmpty) &&
          <div className='row'>
            <div className='pull-right total-user-checkout'>
              <b>Total:</b>
              ${totalPrice}
            </div>
          </div>
        }
      </div>
    )
  }

  // ----------------------------
  const renderSidebar = () => (
    <div>
      <Link
        className='btn btn-info'
        to='/'
      >
        <span className='glyphicon glyphicon-info-sign'></span>
        <span>Continue shopping!</span>
      </Link>
      {
        R.not(isBasketEmpty) && //если карзина не пустая
        <div>
          <button
            onClick={cleanBasket} //щчищает карзину
            className='btn btn-danger'
          >
            <span className='glyphicon glyphicon-trash'></span>
            Clear cart
          </button>
          <button
            className='btn btn-success'
            onClick={() => basketCheckout(phones)}  //выводит все товары alert(том)
          >
            <span className='glyphicon glyphicon-envelope'></span>
            Checkout
          </button>
        </div>
      }
    </div>
  )

  return (
    <div className='view-container'>
      <div>This is BASKET</div>
      <div className='container'>
        <div className='row'>
          <div className='col-md-9'>
            {renderContent()}
          </div>
          <div className='col-md-3 btn-user-checkout'>
            {renderSidebar()}
          </div>

        </div>
      </div>
    </div>
  )
}


 const mapStateToProps = state => {
  return {
    phones: getBasketPhonesWithCount(state),  // товары с добавленными в корзину
    totalPrice: getTotalBasketPrice(state)  //общая цена
  }
}

const mapDispatchToProps = {
  removePhoneFromBasket,  //Удаление из карзины action синхронный
  cleanBasket,
  basketCheckout
}

export default connect(mapStateToProps, mapDispatchToProps)(Basket)
// export default Basket