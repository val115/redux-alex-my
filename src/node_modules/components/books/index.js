import React, {Component} from 'react'
import { connect } from 'react-redux'
// import * as R from 'ramda'
import { Link } from 'react-router-dom'

import { withStoreService } from 'components/hoc'
import { booksLoaded2, loadMoreBooks } from 'actions'
import { compose } from 'utils'
import LoginForm from 'components/login-form'
import { getBooksSelector } from 'selectors'

class Books extends Component {

  componentDidMount() { //закрепить компонент
    const {storeService, booksLoaded2 } = this.props; //, loadMoreBooks
    // const data = storeService.getBooksService();
    // console.log('Data = ', data)
    // booksLoaded2(data);
    // -----------------
    storeService.getBooksService()
      .then((data) => booksLoaded2(data))
      // .catch((err) => booksError(err));
    
    //Глобальный state виден в actions (getState)
    // const offset = R.length(state.booksIds.ids)
    /* storeService.getBooksMoreService()
      .then((data) => loadMoreBooks(data)) */
      // .catch((err) => booksError(err));
    
  }
  
  handleSubmit = (values) => {
    console.log('Books-form  =', values);
    // this.props.submitForm(values);
  };

  
  rederBook(book, idx) {
    // console.log('BOOK = ', book)
    // const shortDescription = `${R.take(60, phone.description)}.....`
    return (
      <div className='col-sm-4 col-lg-4 book-list' key={idx}>
        <div className='thumbnail'>
          <img
            className='img-thumbnail'
            src={book.coverImage}
            alt={book.title}
          />
          <div className='caption'>
            <h4 className='pull-right'>${book.price}</h4>
            <h4>
              <Link to={`/book/${book.id}`}>
                {book.title}
              </Link>
            </h4>
            <p>{book.author}</p>
            <p>
              <button className='btn btn-primary'>
                Buy now
              </button>
              <Link to={`/book/${book.id}`}>
                More info
              </Link>
            </p>
          </div>
        </div>
      </div>
    )
  }


  // ========================================
  render() {

    const { books, loadMoreBooks } = this.props    
    console.log('Books  =', books)
    
    return (
      <>
        <div>Books</div>
        <div className='books row'>
          { books.map((book, idx) => this.rederBook(book, idx)) }
        </div>
        <div className='row'>
          <div className='col-md-12'>
            <button
              className='pull-right btn btn-primary'
              onClick={ loadMoreBooks }
            >
              Load More
            </button>
          </div>
        </div>
        <div className='row'>
          <LoginForm onSubmit={ this.handleSubmit } />
        </div>
      </>
    )
  }
}

/* const mapStateToProps = ( {books} ) => {
  console.log('MAP----', books)  
  return { books: books.books };
}; */
const mapStateToProps = ( state ) => ({
  books: getBooksSelector(state)  
});

const mapDispatchToProps = {
  booksLoaded2,
  loadMoreBooks
  
}

export default compose(
  withStoreService(),
  connect(mapStateToProps, mapDispatchToProps)
)(Books);
  
