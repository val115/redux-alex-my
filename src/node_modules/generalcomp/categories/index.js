import React from 'react'
import {connect} from 'react-redux'
import {withRouter} from 'react-router'
import {compose} from 'redux'
import { Link } from 'react-router-dom'
import classNames from 'classnames' //для работы с классами
import * as R from 'ramda'

import {getCategories, getActiveCategoryId} from 'selectors'



const Categories = ({ categories, activeCategoryId }) => {
  
  // console.log('Categories=', categories)
  // console.log('activeCategoryId', activeCategoryId) 
  //этот id (activeCategoryId) можно использовать например в подсетки данной категории

 const renderCategory = (category, index) => {

    const getActiveState = R.propEq('id', activeCategoryId) 
   // R.propEq() - проверяет равенство свойств id' и activeCategoryId, при равенсте возвращает true
    const linkClass = classNames({ 
      'list-group-item': true, //при использовании classNames при true возвращает данный класс, т.е. в linkClass будет класс,  list-group-item, при втором параметре active - проверяем это условие, если выполнится будет active, если нет будет list-group-item
      'active': getActiveState(category)
    })

    return (
      <Link
      //  className='list-group-item' 
      className={linkClass}
        to={`/categories/${category.id}`}
        key={index}
      >
        {category.name}
      </Link>
    )
  }

  // Для вывода всех категорий
  const renderAllCategory = () => {
    const linkClass = classNames({
      'list-group-item': true,
      'active': R.isNil(activeCategoryId)
      //active - будет ture, когда activeCategoryId будет undefaind или null

    })
    return (
      <Link
        to='/'
        className={linkClass}
      >
        All categories
      </Link>
    )
  }

  return (
    <div className='well'>
      <h4>Brand</h4>
      <div className='list-group'>
        {renderAllCategory()} 
        {categories.map((category, index) => renderCategory(category, index))}
      </div>
    </div>
  )
}

const mapStateToProps = (state, ownProps) => ({
  //свойство - ownProps - дает нам withRouter, в которм информация из Router? .т.е. id из URL в категориях
  categories: getCategories(state), //получаем все категории  - selectors
  activeCategoryId: getActiveCategoryId(ownProps)
})

export default compose(
  withRouter,  //<Categories/> является дочерним компонентом, поэтому его заварачиваем withRouter, чтобы иметь доступ из Router
  connect(mapStateToProps, null)
)(Categories)

// export default Categories