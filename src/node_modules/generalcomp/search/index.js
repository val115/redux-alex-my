import React, { Component } from 'react'
import { connect } from 'react-redux'

import { searchPhone } from 'actions'

class Search extends Component {

  constructor(props) {
    super(props) //чтобы отменить дефолтное поведение конструктора
    this.state = {
      value: ''
    }
    this.handleSubmit = this.handleSubmit.bind(this)
    this.handleChange = this.handleChange.bind(this)
  }

  handleChange(e) {
    // console.log('EVENT = ', e.target.value)
    this.setState({
      value: e.target.value
    })
  }

  handleSubmit(e) {
    e.preventDefault()
    this.props.searchPhone(this.state.value)  //action
  }

  render () {
    return (
      <div className='well blost'>
        <h3 className='lead'>Quick shop</h3>
        <div className='input-group'>
          <form onSubmit={this.handleSubmit}>
            <input onChange={this.handleChange}
              type='text'
              className='form-control'/>
          </form>
          <span className='input-group-btn'>
            <button className='btn btn-default'
              // onChange={this.handleChange} 
            >
              <span className='glyphicon glyphicon-search'></span>
            </button>
          </span>
        </div>
      </div>
    )
  }
}

const mapDispatchToProps = {  
  searchPhone //синхронный action т.к. выполняется на клиенской строне
}

export default connect(null, mapDispatchToProps)(Search)